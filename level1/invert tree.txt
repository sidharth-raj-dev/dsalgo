def invertTree(self, root):
        """
        :type root: TreeNode
        :rtype: TreeNode
        """
        if root is not None:
            # Save both pointers temporarily
            temp1 = root.left
            temp2 = root.right
            
            # Swap the pointers
            root.left = temp2
            root.right = temp1
            
            # Recursively invert the subtrees
            self.invertTree(root.left)
            self.invertTree(root.right)
        return root

solution-2:

def invertTree(self, root):
       if root == None:
           return
       root.left, root.right = self.invertTree(root.right),self.invertTree(root.left)
       return root